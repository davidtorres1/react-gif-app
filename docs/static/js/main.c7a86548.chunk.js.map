{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","input","target","onFocus","getGifs","category","a","URL","encodeURI","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","index","className","Math","ceil","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,kCAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAc9C,OAEI,sBAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAAW,SAAAC,GAAK,OAAKV,EAAcU,EAAMC,OAAOH,QAChDI,QAAU,kBAAMZ,EAAc,U,+BCtBjCa,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGKA,EAAIC,OAHT,uBAGVC,EAHU,EAGVA,KAEHC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAaZL,GAbY,4CAAH,sDCAPQ,EAAc,SAAC,GAA4B,EAA3BL,GAA4B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKI,EAAW,EAAXA,MAEzC,OACI,sBAAKC,UAAS,gEAA2DC,KAAKC,KAAW,GAANH,GAArE,KAAd,UACI,qBAAKI,IAAMR,EAAMS,IAAMV,IACvB,4BAAKA,QCHJW,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNiB,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACN5B,EAASC,GACJ4B,MAAM,SAAApB,GACHkB,EAAS,CACLnB,KAAMC,EACNgB,SAAS,SAGtB,CAAExB,IAEEyB,EDd2BI,CAAc7B,GAAlCc,EAFuB,EAE7BP,KAAciB,EAFe,EAEfA,QAEtB,OACI,gCACI,oBAAIN,UAAU,oCAAd,SAAoDlB,IAElDwB,GAAW,2CAEb,qBAAKN,UAAU,UAAf,SAEQJ,EAAOL,KAAK,SAACC,EAAKO,GAAN,OACR,cAAC,EAAD,aAA4BA,MAAQA,GAAaP,GAA9BA,EAAIC,aEbjCmB,EAAe,WAAO,IAAD,EAEK9C,mBAAS,CAAC,aAFf,mBAExB+C,EAFwB,KAEZhD,EAFY,KAI/B,OAAQ,qCAEJ,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACMgD,EAAWtB,KAAI,SAAAuB,GAAO,OACpB,cAAC,EAAD,CAEIhC,SAAWgC,GADJA,Y,MCV3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7a86548.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('Ingresa una nueva categoria...')\n\n    const handleSubmit = e => {\n        e.preventDefault() \n\n        if( inputValue.trim().length > 2) {\n            setCategories( prev => [inputValue, ...prev])\n            setinputValue('')\n        }\n\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={ inputValue }\n                onChange={ input =>  setinputValue(input.target.value) }\n                onFocus={ () => setinputValue('') }\n                \n            />\n        </form>\n        \n    )\n}\n\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async ( category ) => {\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZqDt3aTn71u9VLi7oqM8nMDnBNUk7j7D`\n    const res = await fetch(URL)\n    const  { data } = await res.json()\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url, index}) => {\n\n    return (\n        <div className={`card animate__animated animate__fadeIn animate__delay-${Math.ceil(index*.5)}s`}>\n            <img src={ url } alt={ title } ></img>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images ,loading } = useFetchGifs( category )\n    \n    return (\n        <div>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div className=\"gifGrid\">\n                {\n                    images.map( (img, index) => (\n                        <GifGridItem key={ img.id } index={ index } { ...img } />\n                    ))\n                }\n            </div>\n            \n        </div>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs( category )\n            .then( gifs => {\n                setState({\n                    data: gifs,\n                    loading: false\n                })\n            })\n    }, [ category ])\n\n    return state\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport  const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['OnePunch'])\n\n    return (<>\n\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories } />\n        <hr />  \n\n        <ol>\n            { categories.map(element => \n                <GifGrid \n                    key= { element }\n                    category={ element } \n                />) \n            }\n        </ol>\n\n    </>)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}